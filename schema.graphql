type Transaction @entity {

  id: ID! # Transaction hash

  blockNumber: Int

  blockTimestamp: Date!

  value: BigInt!

  to: String!

  from: String!

  contractAddress: String!

}

type Sum @entity {

  id: ID! # only "1" ring to hold them all

  mintedTotal: BigInt

  burnedTotal: BigInt

}

type NFTHolders @entity {

  id: ID! # holder wallet address

}

type ZoomPerDay @entity {

  id: ID! #timestamp

  minted: BigInt

  burned: BigInt

}

type ZoomScoreUpdated @entity {

  id: ID! #timestamp

  blockNumber: Int

  blockTimestamp: Date!

  owner: String!

  newZoomScore: BigInt

  zoomGained: BigInt

}

type ZoomBurned @entity {

  id: ID! #timestamp

  blockNumber: Int

  blockTimestamp: Date!

  owner: String!

  totalZoomBurned: BigInt

  zoomBurned: BigInt

}

type NFTPerDay @entity {

  id: ID! #timestamp

  minted: BigInt

  burned: BigInt

}

type RarityPerDay @entity {

  id: ID! #timestamp

  diamond: BigInt

  platinum: BigInt

  epic: BigInt

  rare: BigInt

  uncommon: BigInt

  common: BigInt

}

type LogCardMinted @entity {
	id: ID! # Transaction Hash

  blockNumber: Int

  blockTimestamp: Date!

  buyer: String!

  tokenId: BigInt!

  rarity: Int!

  cardTypeId: Int!

  editionNumber: BigInt!

  isFoil: Boolean
}

type MintedType @entity {
  id: ID!

  blockTimestamp: Date!

  cardTypeId: Int!

}

type LogCardTypeLoaded @entity {
 id: ID!

 blockNumber: Int

 blockTimestamp: Date!

 cardTypeId: Int!

 cardTypeName: String

 editionTotal: BigInt!
}

type LogPackOpened @entity {
 id: ID!

 blockNumber: Int

 blockTimestamp: Date!

 buyer: String!

 rarity: Int!
}

type LogSponsorLinked @entity {
  id:ID!

  blockNumber: Int

  blockTimestamp: Date!

  sponsor: String!

  affiliate: String!
}

type LogSponsorReward @entity {
  id:ID!

  blockNumber: Int

  blockTimestamp: Date!

  sponsor: String!

  affiliate: String!

  zoomReward: BigInt!
}

type LogDailyReward @entity {
  id:ID!

  blockNumber: Int

  blockTimestamp: Date!

  player: String!

  newBoosterBalance: BigInt!
}

type LogRewardBooster @entity {
  id: ID!

  blockNumber: Int

  blockTimestamp: Date!

  winner: String!

  boostersAwarded: BigInt!
}

type LogSacrificeNFT @entity {
  id:ID!

  blockNumber: Int

  blockTimestamp: Date!

  owner: String!

  tokenId: BigInt!

  cardTypeId: BigInt!

  zoomGained: BigInt!
}

type NftTransfer @entity {
 id:ID!

 blockNumber: Int

 blockTimestamp: Date!

 from: String!

 to: String!

 tokenId: BigInt!
}